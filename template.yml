AWSTemplateFormatVersion: 2010-09-09
Description: >-
  workstreams

Transform:
- AWS::Serverless-2016-10-31

Parameters:
  TableName:
    Type: String
    Default: WorkStreamsTable
    Description: workstreamsTable database Table
  StatsTableName:
    Type: String
    Default: WorkStreamsTableStats
    Description:  workstreams Stats Table

  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Application development environments

Mappings:
  EnvMappings:
    dev:
      region: eu-west-1
      url: workstreams.dev.travcorpservices.com
      hostedZoneName: "dev.travcorpservices.com."
      certificateArn: 'arn:aws:acm:us-east-1:236731556556:certificate/d2724ea5-bf47-46aa-bd38-bdb5c8f1b419'
    prod:
      region: eu-west-1
      url: workstreams.qa.travcorpservices.com
      hostedZoneName: "qa.travcorpservices.com."
      certificateArn: 'arn:aws:acm:us-east-1:955830326938:certificate/406b5d40-4faa-4de0-ace9-bf14e4846333'

Globals:
    Function:
      Timeout: 60
      MemorySize: 128
      Runtime: nodejs10.x
      Tracing: Active
      Environment:
        Variables:
          ENV_NAME: !Ref Environment
          REGION: !FindInMap [ EnvMappings, !Ref Environment, region ]
          WORK_STREAMS_TABLE: !Ref WorkStreamsTable
          WORK_STREAMS_STATS_TABLE: !Ref WorkStreamsTableStats
          MAGIC_KEY: 'magicKey'

Resources:
  WorkSreamsGetUiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ '-', [ 'WorkSreamsGetUiFunction' , !Ref Environment ] ]
      CodeUri: streams-ui/
      Handler: app.handler
      Role: !GetAtt [ WorkStreamFunctionsRole, Arn ]
      Description: An HTTP get method to return the ui.
      Events:
        WorkStreamsApi:
          Type: Api
          Properties:
            Path: /
            Method: GET

  WorkSreamsGetStateFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ '-', [ 'WorkSreamsGetStateFunction' , !Ref Environment ] ]
      CodeUri: streams-get/
      Handler: app.handler
      Role: !GetAtt [ WorkStreamFunctionsRole, Arn ]
      Description: An HTTP get method to get all latest state from a DynamoDB table.
      Events:
        WorkStreamsApi:
          Type: Api
          Properties:
            Path: /state
            Method: GET

  WorkSreamsSaveStateFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ '-', [ 'WorkSreamsSaveStateFunction' , !Ref Environment ] ]
      CodeUri: streams-save/
      Handler: app.handler 
      Role: !GetAtt [ WorkStreamFunctionsRole, Arn ]
      Description: An HTTP post method to save state DynamoDB table.
      Events:
        WorkStreamsApi:
          Type: Api
          Properties:
            Path: /state
            Method: POST

  WorkStreamsOverViewFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ '-', [ 'WorkStreamsOverViewFunction' , !Ref Environment ] ]
      CodeUri: cohesion-ui/
      Handler: app.handler 
      Role: !GetAtt [ WorkStreamFunctionsRole, Arn ]
      Description: An HTTP post method to save state DynamoDB table.
      Events:
        WorkStreamsApi:
          Type: Api
          Properties:
            Path: /cohesion
            Method: GET
 
  WorkStreamsGetStatsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ '-', [ 'WorkStreamsGetStatsFunction' , !Ref Environment ] ]
      CodeUri: cohesion-get-stats/
      Handler: app.handler 
      Role: !GetAtt [ WorkStreamFunctionsRole, Arn ]
      Description: An HTTP post method to save state DynamoDB table.
      Events:
        WorkStreamsApi:
          Type: Api
          Properties:
            Path: /cohesion/stats
            Method: GET
 
  WorkStreamsStatsParserFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ '-', [ 'WorkStreamsStatsParserFunction' , !Ref Environment ] ]
      CodeUri: cohesion-edges/
      Handler: app.handler 
      Role: !GetAtt [ WorkStreamFunctionsRole, Arn ]
      Description: scan and extract connection.
      Events:
        WorkStreamsApi:
          Type: Api
          Properties:
            Path: /cohesion/stats-refresh
            Method: GET

  WorkStreamsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: WorkStreamsTable
      PrimaryKey:
        Name: state
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  WorkStreamsTableStats:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: WorkStreamsTableStats
      PrimaryKey:
        Name: linkId
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  WorkStreamFunctionsRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          -
            PolicyName: WorkstreamsLambdaPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:GetItem
                    - dynamodb:PutItem
                    - dynamodb:UpdateItem
                    - dynamodb:Scan
                    - dynamodb:Query
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - lambda:InvokeFunction
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - xray:*
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - ssm:GetParameter*
                  Resource: '*'

  DomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: !FindInMap [ EnvMappings, !Ref Environment, certificateArn ]
      DomainName: !FindInMap [ EnvMappings, !Ref Environment, url ]

  UrlMapping:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn:
      - ServerlessRestApi
    Properties:
      DomainName: !Ref DomainName
      RestApiId: !Sub ${ServerlessRestApi}
      Stage: Stage

  WorkStreamsDNS:
    Type: AWS::Route53::RecordSet
    Properties:
      Comment: route53 record set for the payment proxy.
      HostedZoneName: !FindInMap [ EnvMappings, !Ref Environment, hostedZoneName ]
      Name: !FindInMap [ EnvMappings, !Ref Environment, url ]
      Type: CNAME
      TTL: '300'
      ResourceRecords:
      - !GetAtt DomainName.DistributionDomainName

  WorkStreamsParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: 'workstreamsParameters'
      Description: 'Simple parameters app'
      Type: String
      Value: '{"magicKey": "value1"}'

Outputs:
  WorkStreamsApi:
    Description: "API Gateway endpoint URL"
    Value:  !Join [ '', [ 'https://' , !FindInMap [ EnvMappings, !Ref Environment, url ] ] ]

  WorkSreamsGetUiFunction:
    Description: "Checkout Lambda Function ARN"
    Value: !GetAtt WorkSreamsGetUiFunction.Arn

  WorkSreamsGetStateFunction:
    Description: "Charges Lambda Function ARN"
    Value: !GetAtt WorkSreamsGetStateFunction.Arn

  WorkSreamsSaveStateFunction:
    Description: "User interface Lambda Function ARN"
    Value: !GetAtt WorkSreamsSaveStateFunction.Arn

  WorkStreamsOverViewFunction:
    Description: "User interface Lambda Function ARN"
    Value: !GetAtt WorkStreamsOverViewFunction.Arn
    
  WorkStreamsStatsParserFunction:
    Description: "User interface Lambda Function ARN"
    Value: !GetAtt WorkStreamsStatsParserFunction.Arn
    
  WorkStreamsGetStatsFunction:
    Description: "User interface Lambda Function ARN"
    Value: !GetAtt WorkStreamsGetStatsFunction.Arn
