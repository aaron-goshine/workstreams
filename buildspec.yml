# version: 0.2
# phases:
#   install:
#     commands:
#       # Install all dependencies (including dependencies for running tests)
#       - npm install
#   pre_build:
#     commands:
#       # Discover and run unit tests in the '__tests__' directory
#       # - npm run test
#       # Remove all unit tests to reduce the size of the package that will be ultimately uploaded to Lambda
#       # - rm -rf ./__tests__
#       # Remove all dependencies not needed for the Lambda deployment package (the packages from devDependencies in package.json)
#       - npm prune --production
#   build:
#     commands:
#       # Use AWS SAM to package the application by using AWS CloudFormation
#       - aws cloudformation package --template template.yml --s3-bucket $S3_BUCKET --output-template template-export.yml
# artifacts:
#   type: zip
#   files:
#     - template-export.yml
#
version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 10
    commands:
      - echo "installing sam"
      - pip install --upgrade pip
      - pip install aws-sam-cli
  pre_build:
    commands:
      - echo "installing npm packages "
      - npm install
      - echo "running eslint "
      # - npm run lint
      # - echo "running unit test "
      # - npm run test

  build:
    commands:
      - echo build started at `date` for environment $ENV_NAME
      - sam package --s3-bucket workstreams-$ENV_NAME --template-file template.yml --output-template-file workstreams.yml
      - echo "deploying"
      - sam deploy --template-file workstreams.yml --stack-name workstreams-$ENV_NAME --capabilities CAPABILITY_IAM
  post_build:
    commands:
      - echo deployment completed at `date`

artifacts:
  type: zip
  files:
    - workstreams.yml
